
	scope	r800chk

r800chk_entry::

	ld	de,test1_text
	call	puts
	call	test1_code
	call	putresult

	ld	de,test2_text
	call	puts
	call	test2_code
	call	putresult

	ld	de,test3_text
	call	puts
	call	test3_code
	call	putresult

	ld	de,test4_text
	call	puts
	call	test4_code
	call	putresult

	ld	de,test5_text
	call	puts
	call	test5_code
	call	putresult

	jp	r800chk_exit


putresult:
	ld	de,ncresult
	jp	nc,puts
	ld	de,cresult
	jp	puts

ncresult:
	defs	"result:NC\r\n$"

cresult:
	defs	"result:C\r\n$"

test1_code:
	sll	a
	rra
	ret

test1_text:
	defs	"[TEST1]:CB371F\r\n"
	defs	"sll a:rra\r\n"
	defs	"Z80:C R800:NC $"

test2_code:
	ld	l,-1
	defb	0xDD
	inc	ix
	rr	l
	ret

test2_text:
	defs	"[TEST2]:2EFFDDDD23CB1D\r\n"
	defs	"ld l,-1:db 0DDh:inc ix:rr l\r\n"
	defs	"Z80:C R800:NC $"

test3_code:
	xor	a,a
	dec	a
	ld	b, a
	mulub	a,b
	ccf
	ret

test3_text:
	defs	"[TEST3]:AF3D47EDC13F\r\n"
	defs	"xor a:dec a:ld b,a:mulub a,b:ccf\r\n"
	defs	"Z80:C R800:NC $"

test4_code:
	ld	c,-1
	push	bc
	pop	af
	xor	a,a
	push	af
	pop	bc
	ld	a,c
	rla
	rla
	rla
	ccf
	ret

test4_text:
	defs	"[TEST4]:0EFFC5F1AFF5C1791717173F\r\n"
	defs	"ld c,-1:push bc:pop af:xor a:push af:pop bc:ld a,c:rla:rla:rla:ccf\r\n"
	defs	"Z80:C R800:NC $"

test5_code::
	di
	ld	a,0x7F
	ld	r,a
	nop
	ld	a,r
	rla
	ccf
	ei
	ret


test5_text::
	defs	"[TEST5]:3E7FED4F00ED5F173F\r\n"
	defs	"ld a,07fh:ld r,a:nop:ld a,r:rla:ccf\r\n"
	defs	"Z80:C R800:NC $"

	endscope
